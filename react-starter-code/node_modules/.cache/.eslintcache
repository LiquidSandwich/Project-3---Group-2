[{"/home/ec2-user/environment/project3/react-starter-code/src/index.js":"1","/home/ec2-user/environment/project3/react-starter-code/src/App.js":"2","/home/ec2-user/environment/project3/react-starter-code/src/reportWebVitals.js":"3","/home/ec2-user/environment/project3/react-starter-code/src/Login.js":"4","/home/ec2-user/environment/project3/react-starter-code/src/Options.js":"5"},{"size":500,"mtime":1618269670356,"results":"6","hashOfConfig":"7"},{"size":208,"mtime":1618269774572,"results":"8","hashOfConfig":"7"},{"size":362,"mtime":1618269670356,"results":"9","hashOfConfig":"7"},{"size":2011,"mtime":1618457055558,"results":"10","hashOfConfig":"7"},{"size":3792,"mtime":1618442908211,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"1ybyyjo",{"filePath":"15","messages":"16","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"17","usedDeprecatedRules":"14"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"22","messages":"23","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24","usedDeprecatedRules":"14"},"/home/ec2-user/environment/project3/react-starter-code/src/index.js",[],["25","26"],"/home/ec2-user/environment/project3/react-starter-code/src/App.js",["27"],"import './App.css';\nimport React from 'react';\nimport io from 'socket.io-client';\nimport Login from './Login';\n\nfunction App() {\n  \n  return (\n    <div>\n      <Login />\n    </div>\n  );\n}\n\nexport default App;\n","/home/ec2-user/environment/project3/react-starter-code/src/reportWebVitals.js",[],"/home/ec2-user/environment/project3/react-starter-code/src/Login.js",["28","29","30"],"/home/ec2-user/environment/project3/react-starter-code/src/Options.js",["31"],"import './Options.css';\nimport Login from './Login';\nimport { GoogleLogout } from 'react-google-login';\nimport { useState, useEffect } from 'react';\n\n// These two lines load environmental variables from .env\nconst dotenv = require('dotenv');\ndotenv.config();\n\n// Fills clientID variable with API ID key\nconst CLIENT_ID = process.env.REACT_APP_GOOGLE_ID;\nconst BASE_URL = '/api/v1/new'\n\nfunction Options(props) {\n  \n  // Boolean that tracks status on if the user is logged in or not\n  const [isLoggedIn, setIsLoggedIn] = useState(true);\n  const [difficulty, setDifficulty] = useState(null);\n  const [category, setCategory] = useState(null);\n  \n  // Code that sets login status to false when button is clicked\n  const onSuccess = (res) => {\n    setIsLoggedIn(!isLoggedIn);\n  };\n  \n  const firstName = props.userData.name.split(\" \")[0];\n  \n  const categoryHandler = (event) => {\n    setCategory(event.target.value);\n  }; \n  \n  const difficultyHandler = (event) => {\n    setDifficulty(event.target.value);\n  }; \n  \n  const handleOptions = () => {\n    const data = JSON.stringify({\n        'diffculty' : difficulty, \n        'category' : category\n    });\n    fetch(BASE_URL, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: data\n    });\n  }\n\n  \n  return (\n  <div>\n    {isLoggedIn ? (\n      <body>\n        <h1>\n          Welcome Back, {firstName}!<br/><br/>\n        </h1>\n        <h2 id=\"teamname\">\n          nogginy\n        </h2>\n        <h7>\n          <GoogleLogout\n            clientId={CLIENT_ID}\n            buttonText=\"Log out\"\n            onLogoutSuccess={onSuccess}\n          ></GoogleLogout>\n        </h7>\n\n          <label for=\"trivia_difficulty\">Choose a Category:</label>\n          <select onChange={difficultyHandler} name=\"trivia_difficulty\">\n      \t\t\t<option value=\"any\">Any Difficulty</option>\n      \t\t\t<option value=\"easy\">Easy</option>\n      \t\t\t<option value=\"medium\">Medium</option>\n      \t\t\t<option value=\"hard\">Hard</option>\n      \t\t</select>\n          \n          <label for=\"trivia_category\">Choose a Category:</label>\n  \n          <select onChange={categoryHandler} name=\"trivia_category\">\n          \t<option value=\"any\">Any Category</option>\n          \t<option value=\"9\">General Knowledge</option>\n          \t<option value=\"10\">Entertainment: Books</option>\n          \t<option value=\"11\">Entertainment: Film</option>\n          \t<option value=\"12\">Entertainment: Music</option>\n          \t<option value=\"13\">Entertainment: Musicals &amp; Theatres</option>\n          \t<option value=\"14\">Entertainment: Television</option>\n          \t<option value=\"15\">Entertainment: Video Games</option>\n          \t<option value=\"16\">Entertainment: Board Games</option>\n          \t<option value=\"17\">Science &amp; Nature</option>\n          \t<option value=\"18\">Science: Computers</option>\n          \t<option value=\"19\">Science: Mathematics</option>\n          \t<option value=\"20\">Mythology</option>\n          \t<option value=\"21\">Sports</option>\n          \t<option value=\"22\">Geography</option>\n          \t<option value=\"23\">History</option>\n          \t<option value=\"24\">Politics</option>\n          \t<option value=\"25\">Art</option>\n          \t<option value=\"26\">Celebrities</option>\n          \t<option value=\"27\">Animals</option>\n          \t<option value=\"28\">Vehicles</option>\n          \t<option value=\"29\">Entertainment: Comics</option>\n          \t<option value=\"30\">Science: Gadgets</option>\n          \t<option value=\"31\">Entertainment: Japanese Anime &amp; Manga</option>\n          \t<option value=\"32\">Entertainment: Cartoon &amp; Animations</option>\n          </select>\n          \n          <button onClick={handleOptions}>Play Game</button>\n        \n      </body>\n      \n      ) : <Login />}\n  </div>\n  );\n}\n\nexport default Options;",{"ruleId":"32","replacedBy":"33"},{"ruleId":"34","replacedBy":"35"},{"ruleId":"36","severity":1,"message":"37","line":3,"column":8,"nodeType":"38","messageId":"39","endLine":3,"endColumn":10},{"ruleId":"36","severity":1,"message":"40","line":2,"column":27,"nodeType":"38","messageId":"39","endLine":2,"endColumn":33},{"ruleId":"36","severity":1,"message":"41","line":2,"column":35,"nodeType":"38","messageId":"39","endLine":2,"endColumn":44},{"ruleId":"36","severity":1,"message":"42","line":14,"column":7,"nodeType":"38","messageId":"39","endLine":14,"endColumn":15},{"ruleId":"36","severity":1,"message":"41","line":4,"column":20,"nodeType":"38","messageId":"39","endLine":4,"endColumn":29},"no-native-reassign",["43"],"no-negated-in-lhs",["44"],"no-unused-vars","'io' is defined but never used.","Identifier","unusedVar","'useRef' is defined but never used.","'useEffect' is defined but never used.","'clientID' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]