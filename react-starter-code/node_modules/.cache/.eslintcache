[{"/home/ec2-user/environment/project3/react-starter-code/src/index.js":"1","/home/ec2-user/environment/project3/react-starter-code/src/App.js":"2","/home/ec2-user/environment/project3/react-starter-code/src/reportWebVitals.js":"3","/home/ec2-user/environment/project3/react-starter-code/src/Login.js":"4","/home/ec2-user/environment/project3/react-starter-code/src/Options.js":"5"},{"size":500,"mtime":1618269670356,"results":"6","hashOfConfig":"7"},{"size":208,"mtime":1618269774572,"results":"8","hashOfConfig":"7"},{"size":362,"mtime":1618269670356,"results":"9","hashOfConfig":"7"},{"size":2011,"mtime":1618457055558,"results":"10","hashOfConfig":"7"},{"size":4168,"mtime":1618476626325,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"1ybyyjo",{"filePath":"15","messages":"16","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"17","usedDeprecatedRules":"14"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22","usedDeprecatedRules":"14"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/ec2-user/environment/project3/react-starter-code/src/index.js",[],["25","26"],"/home/ec2-user/environment/project3/react-starter-code/src/App.js",["27"],"import './App.css';\nimport React from 'react';\nimport io from 'socket.io-client';\nimport Login from './Login';\n\nfunction App() {\n  \n  return (\n    <div>\n      <Login />\n    </div>\n  );\n}\n\nexport default App;\n","/home/ec2-user/environment/project3/react-starter-code/src/reportWebVitals.js",[],"/home/ec2-user/environment/project3/react-starter-code/src/Login.js",["28","29","30"],"import './Login.css';\nimport React, { useState, useRef, useEffect } from 'react';\nimport { GoogleLogin } from 'react-google-login';\nimport Options from './Options';\nimport io from 'socket.io-client';\n\nexport const socket = io();\n\n// These two lines load environmental variables from .env\nconst dotenv = require('dotenv');\ndotenv.config();\n\n// Fills clientID variable with API ID key\nconst clientID = process.env.REACT_APP_GOOGLE_ID;\n\n// Component that handles Login\nfunction Login() {\n  \n  // Boolean that tracks status on if the user is logged in or not\n  const [isLoggedIn, setIsLoggedIn] = useState(true);\n  const [userData, setUserData] = useState({'name':'','img':''});\n  \n  // If the user logs in, the below code executes\n  const onSuccess = (res) => {\n    console.log('[Login Success] currentUser:', res.profileObj);\n    const data = res.profileObj;\n    const email = data['email'];\n    const name = data['name'];\n    const imageUrl = data['imageUrl'];\n    \n    console.log('Email of user:', data['email']);\n    console.log('Name of user:', data['name']);\n    console.log('Image of user:', data['imageUrl']);\n    setIsLoggedIn(!isLoggedIn);\n    setUserData({'name':name, 'img':imageUrl});\n    socket.emit('login',[email, name, imageUrl]);\n  };\n  \n  // If the user fails to login, the below code executes\n  const onFailure = (res) => {\n    console.log('[Login Failed] res:', res);\n  };\n  \n  /* \n  Shows starting page of webapp.\n  Once user logs in with their Google Account,\n  user will than be taken to the Options Component.\n  */\n  return (\n    <div>\n    {isLoggedIn ? (\n      <h1>\n        nogginy\n        <h2>\n          trivia and chat with friends\n        </h2>\n        <GoogleLogin\n          clientId={process.env.REACT_APP_GOOGLE_ID}\n          buttonText=\"Log in with Google\"\n          onSuccess={onSuccess}\n          onFailure={onFailure}\n          cookiePolicy={'single_host_origin'}\n        />\n      </h1>\n      ) : \n      <Options userData={userData}/>}\n    </div>\n  );\n}\n\nexport default Login;\n","/home/ec2-user/environment/project3/react-starter-code/src/Options.js",["31","32","33"],{"ruleId":"34","replacedBy":"35"},{"ruleId":"36","replacedBy":"37"},{"ruleId":"38","severity":1,"message":"39","line":3,"column":8,"nodeType":"40","messageId":"41","endLine":3,"endColumn":10},{"ruleId":"38","severity":1,"message":"42","line":2,"column":27,"nodeType":"40","messageId":"41","endLine":2,"endColumn":33},{"ruleId":"38","severity":1,"message":"43","line":2,"column":35,"nodeType":"40","messageId":"41","endLine":2,"endColumn":44},{"ruleId":"38","severity":1,"message":"44","line":14,"column":7,"nodeType":"40","messageId":"41","endLine":14,"endColumn":15},{"ruleId":"38","severity":1,"message":"43","line":4,"column":20,"nodeType":"40","messageId":"41","endLine":4,"endColumn":29},{"ruleId":"38","severity":1,"message":"45","line":18,"column":10,"nodeType":"40","messageId":"41","endLine":18,"endColumn":17},{"ruleId":"38","severity":1,"message":"46","line":18,"column":19,"nodeType":"40","messageId":"41","endLine":18,"endColumn":29},"no-native-reassign",["47"],"no-negated-in-lhs",["48"],"no-unused-vars","'io' is defined but never used.","Identifier","unusedVar","'useRef' is defined but never used.","'useEffect' is defined but never used.","'clientID' is assigned a value but never used.","'gameSet' is assigned a value but never used.","'setGameSet' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]