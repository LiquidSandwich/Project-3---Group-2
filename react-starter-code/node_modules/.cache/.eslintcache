[{"/home/ec2-user/environment/react-starter-code/src/index.js":"1","/home/ec2-user/environment/react-starter-code/src/App.js":"2","/home/ec2-user/environment/react-starter-code/src/reportWebVitals.js":"3","/home/ec2-user/environment/react-starter-code/src/Login.js":"4","/home/ec2-user/environment/react-starter-code/src/Options.js":"5"},{"size":500,"mtime":1617902633878,"results":"6","hashOfConfig":"7"},{"size":208,"mtime":1618189770393,"results":"8","hashOfConfig":"7"},{"size":362,"mtime":1617902633878,"results":"9","hashOfConfig":"7"},{"size":1871,"mtime":1618190832145,"results":"10","hashOfConfig":"7"},{"size":1113,"mtime":1618168379437,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"ebscfm",{"filePath":"15","messages":"16","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"17","usedDeprecatedRules":"14"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"14"},"/home/ec2-user/environment/react-starter-code/src/index.js",[],["26","27"],"/home/ec2-user/environment/react-starter-code/src/App.js",["28"],"import './App.css';\nimport React from 'react';\nimport io from 'socket.io-client';\nimport Login from './Login';\n\nfunction App() {\n  \n  return (\n    <div>\n      <Login />\n    </div>\n  );\n}\n\nexport default App;\n","/home/ec2-user/environment/react-starter-code/src/reportWebVitals.js",[],"/home/ec2-user/environment/react-starter-code/src/Login.js",["29","30","31"],"import './Login.css';\nimport React, { useState, useRef, useEffect } from 'react';\nimport { GoogleLogin } from 'react-google-login';\nimport Options from './Options';\nimport io from 'socket.io-client';\n\nexport const socket = io();\n\n// These two lines load environmental variables from .env\nconst dotenv = require('dotenv');\ndotenv.config();\n\n// Fills clientID variable with API ID key\nconst clientID = process.env.REACT_APP_GOOGLE_ID;\n\n// Component that handles Login\nfunction Login() {\n  \n  // Boolean that tracks status on if the user is logged in or not\n  const [isLoggedIn, setIsLoggedIn] = useState(true);\n  \n  // If the user logs in, the below code executes\n  const onSuccess = (res) => {\n    console.log('[Login Success] currentUser:', res.profileObj);\n    const data = res.profileObj;\n    const email = data['email'];\n    const name = data['name'];\n    const imageUrl = data['imageUrl'];\n    \n    console.log('Email of user:', data['email']);\n    console.log('Name of user:', data['name']);\n    console.log('Image of user:', data['imageUrl']);\n    setIsLoggedIn(!isLoggedIn);\n    socket.emit('login',[email, name, imageUrl]);\n  };\n  \n  // If the user fails to login, the below code executes\n  const onFailure = (res) => {\n    console.log('[Login Failed] res:', res);\n  };\n  \n  /* \n  Shows starting page of webapp.\n  Once user logs in with their Google Account,\n  user will than be taken to the Options Component.\n  */\n  return (\n    <div>\n    {isLoggedIn ? (\n      <h1>\n        nogginy\n        <h2>\n          trivia and chat with friends\n        </h2>\n        <GoogleLogin\n          clientId={process.env.REACT_APP_GOOGLE_ID}\n          buttonText=\"Log in with Google\"\n          onSuccess={onSuccess}\n          onFailure={onFailure}\n          cookiePolicy={'single_host_origin'}\n        />\n      </h1>\n      ) : <Options />}\n    </div>\n  );\n}\n\nexport default Login;\n","/home/ec2-user/environment/react-starter-code/src/Options.js",["32","33","34"],"import './Options.css';\nimport Login from './Login';\nimport { GoogleLogout } from 'react-google-login';\nimport React, { useState, useRef, useEffect } from 'react';\n\n// These two lines load environmental variables from .env\nconst dotenv = require('dotenv');\ndotenv.config();\n\n// Fills clientID variable with API ID key\nconst clientID = process.env.REACT_APP_GOOGLE_ID;\n\nfunction Options() {\n  \n  // Boolean that tracks status on if the user is logged in or not\n  const [isLoggedIn, setIsLoggedIn] = useState(true);\n  \n  // Code that sets login status to false when button is clicked\n  const onSuccess = (res) => {\n    setIsLoggedIn(!isLoggedIn);\n  };\n  \n  return (\n  <div>\n    {isLoggedIn ? (\n      <body>\n        <h1>\n          Welcome Back!<br/><br/>\n        </h1>\n        <h2 id=\"teamname\">\n          nogginy\n        </h2>\n        <h7>\n          <GoogleLogout\n            clientId={process.env.REACT_APP_GOOGLE_ID}\n            buttonText=\"Log out\"\n            onLogoutSuccess={onSuccess}\n          ></GoogleLogout>\n        </h7>\n      </body>\n      \n      ) : <Login />}\n  </div>\n  );\n}\n\nexport default Options;",{"ruleId":"35","replacedBy":"36"},{"ruleId":"37","replacedBy":"38"},{"ruleId":"39","severity":1,"message":"40","line":3,"column":8,"nodeType":"41","messageId":"42","endLine":3,"endColumn":10},{"ruleId":"39","severity":1,"message":"43","line":2,"column":27,"nodeType":"41","messageId":"42","endLine":2,"endColumn":33},{"ruleId":"39","severity":1,"message":"44","line":2,"column":35,"nodeType":"41","messageId":"42","endLine":2,"endColumn":44},{"ruleId":"39","severity":1,"message":"45","line":14,"column":7,"nodeType":"41","messageId":"42","endLine":14,"endColumn":15},{"ruleId":"39","severity":1,"message":"43","line":4,"column":27,"nodeType":"41","messageId":"42","endLine":4,"endColumn":33},{"ruleId":"39","severity":1,"message":"44","line":4,"column":35,"nodeType":"41","messageId":"42","endLine":4,"endColumn":44},{"ruleId":"39","severity":1,"message":"45","line":11,"column":7,"nodeType":"41","messageId":"42","endLine":11,"endColumn":15},"no-native-reassign",["46"],"no-negated-in-lhs",["47"],"no-unused-vars","'io' is defined but never used.","Identifier","unusedVar","'useRef' is defined but never used.","'useEffect' is defined but never used.","'clientID' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]