{"ast":null,"code":"var _jsxFileName = \"/home/ec2-user/environment/project3/react-starter-code/src/GameMode.js\",\n    _s = $RefreshSig$();\n\nimport './GameMode.css';\nimport Login from './Login.js';\nimport Settings from './Settings.js';\nimport { GoogleLogout } from 'react-google-login';\nimport { useState } from 'react'; // These two lines load environmental variables from .env\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst dotenv = require('dotenv');\n\ndotenv.config(); // Fills clientID variable with API ID key\n\nconst CLIENT_ID = process.env.REACT_APP_GOOGLE_ID;\nconst BASE_URL = '/api/v1/new';\n\nfunction GameMode(props) {\n  _s();\n\n  // Boolean that tracks status on if the user is logged in or not\n  const [isLoggedIn, setIsLoggedIn] = useState(true);\n  const [modeSet, setModeSet] = useState(false);\n  const firstName = props.userData.name.split(\" \")[0]; // // Code that sets login status to false when button is clicked\n\n  const onSuccess = res => {\n    setIsLoggedIn(!isLoggedIn);\n  };\n\n  const gameModeHandler = mode => {\n    const data = JSON.stringify({\n      'mode': mode\n    });\n    const url = BASE_URL + '/mode';\n    fetch(url, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: data\n    }).then(response => {\n      console.log(response);\n    });\n    setModeSet(!modeSet);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: isLoggedIn ? modeSet ? /*#__PURE__*/_jsxDEV(Settings, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 19\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"display\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"Welcome Back, \", firstName, \"!\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 41\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 46\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        id: \"teamname\",\n        children: \"nogginy\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h7\", {\n        children: /*#__PURE__*/_jsxDEV(GoogleLogout, {\n          clientId: CLIENT_ID,\n          buttonText: \"Log out\",\n          onLogoutSuccess: onSuccess\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => gameModeHandler('single'),\n        children: \"Single\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 11\n    }, this) : /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 3\n  }, this);\n}\n\n_s(GameMode, \"k/dGCidSXkjCUFOHYn7I88k2xLw=\");\n\n_c = GameMode;\nexport default GameMode;\n\nvar _c;\n\n$RefreshReg$(_c, \"GameMode\");","map":{"version":3,"sources":["/home/ec2-user/environment/project3/react-starter-code/src/GameMode.js"],"names":["Login","Settings","GoogleLogout","useState","dotenv","require","config","CLIENT_ID","process","env","REACT_APP_GOOGLE_ID","BASE_URL","GameMode","props","isLoggedIn","setIsLoggedIn","modeSet","setModeSet","firstName","userData","name","split","onSuccess","res","gameModeHandler","mode","data","JSON","stringify","url","fetch","method","headers","body","then","response","console","log"],"mappings":";;;AAAA,OAAO,gBAAP;AACA,OAAOA,KAAP,MAAkB,YAAlB;AACA,OAAOC,QAAP,MAAqB,eAArB;AACA,SAASC,YAAT,QAA6B,oBAA7B;AACA,SAASC,QAAT,QAAyB,OAAzB,C,CAEA;;;;AACA,MAAMC,MAAM,GAAGC,OAAO,CAAC,QAAD,CAAtB;;AACAD,MAAM,CAACE,MAAP,G,CAEA;;AACA,MAAMC,SAAS,GAAGC,OAAO,CAACC,GAAR,CAAYC,mBAA9B;AACA,MAAMC,QAAQ,GAAG,aAAjB;;AAEA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AAAA;;AAEvB;AACA,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BZ,QAAQ,CAAC,IAAD,CAA5C;AACA,QAAM,CAACa,OAAD,EAAUC,UAAV,IAAwBd,QAAQ,CAAC,KAAD,CAAtC;AAEA,QAAMe,SAAS,GAAGL,KAAK,CAACM,QAAN,CAAeC,IAAf,CAAoBC,KAApB,CAA0B,GAA1B,EAA+B,CAA/B,CAAlB,CANuB,CAQvB;;AACA,QAAMC,SAAS,GAAIC,GAAD,IAAS;AACzBR,IAAAA,aAAa,CAAC,CAACD,UAAF,CAAb;AACD,GAFD;;AAIA,QAAMU,eAAe,GAAIC,IAAD,IAAU;AAChC,UAAMC,IAAI,GAAGC,IAAI,CAACC,SAAL,CAAe;AACxB,cAASH;AADe,KAAf,CAAb;AAGA,UAAMI,GAAG,GAAGlB,QAAQ,GAAG,OAAvB;AACAmB,IAAAA,KAAK,CAACD,GAAD,EAAM;AACTE,MAAAA,MAAM,EAAE,MADC;AAETC,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT,OAFA;AAKTC,MAAAA,IAAI,EAAEP;AALG,KAAN,CAAL,CAMGQ,IANH,CAMSC,QAAQ,IAAI;AACnBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACD,KARD;AASAlB,IAAAA,UAAU,CAAC,CAACD,OAAF,CAAV;AACD,GAfD;;AAkBA,sBACA;AAAA,cACGF,UAAU,GACPE,OAAO,gBAAG,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,YAAH,gBAEL;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA,8BACE;AAAA,qCACiBE,SADjB,oBAC4B;AAAA;AAAA;AAAA;AAAA,gBAD5B,eACiC;AAAA;AAAA;AAAA;AAAA,gBADjC;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAIE;AAAI,QAAA,EAAE,EAAC,UAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF,eAOE;AAAA,+BACE,QAAC,YAAD;AACE,UAAA,QAAQ,EAAEX,SADZ;AAEE,UAAA,UAAU,EAAC,SAFb;AAGE,UAAA,eAAe,EAAEe;AAHnB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAPF,eAeE;AAAQ,QAAA,OAAO,EAAE,MAAIE,eAAe,CAAC,QAAD,CAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAfF;AAAA;AAAA;AAAA;AAAA;AAAA,YAHK,gBAsBL,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAvBR;AAAA;AAAA;AAAA;AAAA,UADA;AA2BD;;GA1DQZ,Q;;KAAAA,Q;AA4DT,eAAeA,QAAf","sourcesContent":["import './GameMode.css';\nimport Login from './Login.js';\nimport Settings from './Settings.js';\nimport { GoogleLogout } from 'react-google-login';\nimport { useState } from 'react';\n\n// These two lines load environmental variables from .env\nconst dotenv = require('dotenv');\ndotenv.config();\n\n// Fills clientID variable with API ID key\nconst CLIENT_ID = process.env.REACT_APP_GOOGLE_ID;\nconst BASE_URL = '/api/v1/new';\n\nfunction GameMode(props) {\n  \n  // Boolean that tracks status on if the user is logged in or not\n  const [isLoggedIn, setIsLoggedIn] = useState(true);\n  const [modeSet, setModeSet] = useState(false);\n\n  const firstName = props.userData.name.split(\" \")[0];\n  \n  // // Code that sets login status to false when button is clicked\n  const onSuccess = (res) => {\n    setIsLoggedIn(!isLoggedIn);\n  };\n  \n  const gameModeHandler = (mode) => {\n    const data = JSON.stringify({\n        'mode' : mode\n    });\n    const url = BASE_URL + '/mode';\n    fetch(url, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: data\n    }).then( response => {\n      console.log(response);\n    });\n    setModeSet(!modeSet);\n  };\n\n  \n  return (\n  <div>\n    {isLoggedIn ? (\n        modeSet ? <Settings /> :\n        (\n          <div className=\"display\">\n            <h1>\n              Welcome Back, {firstName}!<br/><br/>\n            </h1>\n            <h2 id=\"teamname\">\n              nogginy\n            </h2>\n            <h7>\n              <GoogleLogout\n                clientId={CLIENT_ID}\n                buttonText=\"Log out\"\n                onLogoutSuccess={onSuccess}\n              ></GoogleLogout>\n            </h7>\n              \n            <button onClick={()=>gameModeHandler('single')}>Single</button>\n            \n          </div>  \n        )\n      ) : <Login />}\n  </div>\n  );\n}\n\nexport default GameMode;"]},"metadata":{},"sourceType":"module"}