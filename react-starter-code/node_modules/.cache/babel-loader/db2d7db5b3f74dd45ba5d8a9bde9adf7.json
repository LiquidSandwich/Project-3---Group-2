{"ast":null,"code":"var _jsxFileName = \"/home/ec2-user/environment/project3/react-starter-code/src/Login.js\",\n    _s = $RefreshSig$();\n\nimport './Login.css';\nimport React, { useState, useRef, useEffect } from 'react';\nimport { GoogleLogin } from 'react-google-login';\nimport GameMode from './GameMode.js';\nimport io from 'socket.io-client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const socket = io(); // These two lines load environmental variables from .env\n\nconst dotenv = require('dotenv');\n\ndotenv.config(); // Fills clientID variable with API ID key\n\nconst clientID = process.env.REACT_APP_GOOGLE_ID; // Component that handles Login\n\nfunction Login() {\n  _s();\n\n  // Boolean that tracks status on if the user is logged in or not\n  const [isLoggedIn, setIsLoggedIn] = useState(true);\n  const [userData, setUserData] = useState({\n    'name': '',\n    'img': ''\n  }); // If the user logs in, the below code executes\n\n  const onSuccess = res => {\n    console.log('[Login Success] currentUser:', res.profileObj);\n    const data = res.profileObj;\n    const email = data['email'];\n    const name = data['name'];\n    const imageUrl = data['imageUrl'];\n    console.log('Email of user:', data['email']);\n    console.log('Name of user:', data['name']);\n    console.log('Image of user:', data['imageUrl']);\n    setIsLoggedIn(!isLoggedIn);\n    setUserData({\n      'name': name,\n      'img': imageUrl\n    });\n    socket.emit('login', [email, name, imageUrl]);\n  }; // If the user fails to login, the below code executes\n\n\n  const onFailure = res => {\n    console.log('[Login Failed] res:', res);\n  };\n  /* \n  Shows starting page of webapp.\n  Once user logs in with their Google Account,\n  user will than be taken to the GameMode Component.\n  */\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: isLoggedIn ? /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"nogginy\", /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"trivia and chat with friends\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(GoogleLogin, {\n        clientId: process.env.REACT_APP_GOOGLE_ID,\n        buttonText: \"Log in with Google\",\n        onSuccess: onSuccess,\n        onFailure: onFailure,\n        cookiePolicy: 'single_host_origin'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this) : /*#__PURE__*/_jsxDEV(GameMode, {\n      userData: userData,\n      onSuccess: onSuccess\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Login, \"lcLol443ZBObyb8rReabD2A4X+g=\");\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/home/ec2-user/environment/project3/react-starter-code/src/Login.js"],"names":["React","useState","useRef","useEffect","GoogleLogin","GameMode","io","socket","dotenv","require","config","clientID","process","env","REACT_APP_GOOGLE_ID","Login","isLoggedIn","setIsLoggedIn","userData","setUserData","onSuccess","res","console","log","profileObj","data","email","name","imageUrl","emit","onFailure"],"mappings":";;;AAAA,OAAO,aAAP;AACA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,MAA1B,EAAkCC,SAAlC,QAAmD,OAAnD;AACA,SAASC,WAAT,QAA4B,oBAA5B;AACA,OAAOC,QAAP,MAAqB,eAArB;AACA,OAAOC,EAAP,MAAe,kBAAf;;AAEA,OAAO,MAAMC,MAAM,GAAGD,EAAE,EAAjB,C,CAEP;;AACA,MAAME,MAAM,GAAGC,OAAO,CAAC,QAAD,CAAtB;;AACAD,MAAM,CAACE,MAAP,G,CAEA;;AACA,MAAMC,QAAQ,GAAGC,OAAO,CAACC,GAAR,CAAYC,mBAA7B,C,CAEA;;AACA,SAASC,KAAT,GAAiB;AAAA;;AAEf;AACA,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BhB,QAAQ,CAAC,IAAD,CAA5C;AACA,QAAM,CAACiB,QAAD,EAAWC,WAAX,IAA0BlB,QAAQ,CAAC;AAAC,YAAO,EAAR;AAAW,WAAM;AAAjB,GAAD,CAAxC,CAJe,CAMf;;AACA,QAAMmB,SAAS,GAAIC,GAAD,IAAS;AACzBC,IAAAA,OAAO,CAACC,GAAR,CAAY,8BAAZ,EAA4CF,GAAG,CAACG,UAAhD;AACA,UAAMC,IAAI,GAAGJ,GAAG,CAACG,UAAjB;AACA,UAAME,KAAK,GAAGD,IAAI,CAAC,OAAD,CAAlB;AACA,UAAME,IAAI,GAAGF,IAAI,CAAC,MAAD,CAAjB;AACA,UAAMG,QAAQ,GAAGH,IAAI,CAAC,UAAD,CAArB;AAEAH,IAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BE,IAAI,CAAC,OAAD,CAAlC;AACAH,IAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BE,IAAI,CAAC,MAAD,CAAjC;AACAH,IAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BE,IAAI,CAAC,UAAD,CAAlC;AACAR,IAAAA,aAAa,CAAC,CAACD,UAAF,CAAb;AACAG,IAAAA,WAAW,CAAC;AAAC,cAAOQ,IAAR;AAAc,aAAMC;AAApB,KAAD,CAAX;AACArB,IAAAA,MAAM,CAACsB,IAAP,CAAY,OAAZ,EAAoB,CAACH,KAAD,EAAQC,IAAR,EAAcC,QAAd,CAApB;AACD,GAbD,CAPe,CAsBf;;;AACA,QAAME,SAAS,GAAIT,GAAD,IAAS;AACzBC,IAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmCF,GAAnC;AACD,GAFD;AAIA;AACF;AACA;AACA;AACA;;;AACE,sBACE;AAAA,cACCL,UAAU,gBACT;AAAA,yCAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAKE,QAAC,WAAD;AACE,QAAA,QAAQ,EAAEJ,OAAO,CAACC,GAAR,CAAYC,mBADxB;AAEE,QAAA,UAAU,EAAC,oBAFb;AAGE,QAAA,SAAS,EAAEM,SAHb;AAIE,QAAA,SAAS,EAAEU,SAJb;AAKE,QAAA,YAAY,EAAE;AALhB;AAAA;AAAA;AAAA;AAAA,cALF;AAAA;AAAA;AAAA;AAAA;AAAA,YADS,gBAeT,QAAC,QAAD;AAAU,MAAA,QAAQ,EAAEZ,QAApB;AAA8B,MAAA,SAAS,EAAEE;AAAzC;AAAA;AAAA;AAAA;AAAA;AAhBF;AAAA;AAAA;AAAA;AAAA,UADF;AAoBD;;GApDQL,K;;KAAAA,K;AAsDT,eAAeA,KAAf","sourcesContent":["import './Login.css';\nimport React, { useState, useRef, useEffect } from 'react';\nimport { GoogleLogin } from 'react-google-login';\nimport GameMode from './GameMode.js';\nimport io from 'socket.io-client';\n\nexport const socket = io();\n\n// These two lines load environmental variables from .env\nconst dotenv = require('dotenv');\ndotenv.config();\n\n// Fills clientID variable with API ID key\nconst clientID = process.env.REACT_APP_GOOGLE_ID;\n\n// Component that handles Login\nfunction Login() {\n  \n  // Boolean that tracks status on if the user is logged in or not\n  const [isLoggedIn, setIsLoggedIn] = useState(true);\n  const [userData, setUserData] = useState({'name':'','img':''});\n  \n  // If the user logs in, the below code executes\n  const onSuccess = (res) => {\n    console.log('[Login Success] currentUser:', res.profileObj);\n    const data = res.profileObj;\n    const email = data['email'];\n    const name = data['name'];\n    const imageUrl = data['imageUrl'];\n    \n    console.log('Email of user:', data['email']);\n    console.log('Name of user:', data['name']);\n    console.log('Image of user:', data['imageUrl']);\n    setIsLoggedIn(!isLoggedIn);\n    setUserData({'name':name, 'img':imageUrl});\n    socket.emit('login',[email, name, imageUrl]);\n  };\n  \n  // If the user fails to login, the below code executes\n  const onFailure = (res) => {\n    console.log('[Login Failed] res:', res);\n  };\n  \n  /* \n  Shows starting page of webapp.\n  Once user logs in with their Google Account,\n  user will than be taken to the GameMode Component.\n  */\n  return (\n    <div>\n    {isLoggedIn ? (\n      <h1>\n        nogginy\n        <h2>\n          trivia and chat with friends\n        </h2>\n        <GoogleLogin\n          clientId={process.env.REACT_APP_GOOGLE_ID}\n          buttonText=\"Log in with Google\"\n          onSuccess={onSuccess}\n          onFailure={onFailure}\n          cookiePolicy={'single_host_origin'}\n        />\n      </h1>\n      ) : \n      <GameMode userData={userData} onSuccess={onSuccess}/>}\n    </div>\n  );\n}\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}