{"ast":null,"code":"var _jsxFileName = \"/home/ec2-user/environment/react-starter-code/src/Options.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef, useEffect } from 'react';\nimport { GoogleLogin } from 'react-google-login';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Options() {\n  _s();\n\n  const [status, setStatus] = useState(true); // If the user logs in, the below code executes\n\n  const onSuccess = res => {\n    setStatus(!status);\n  }; // If the user fails to login, the below code executes\n\n\n  const onFailure = res => {\n    console.log('[Login Failed] res:', res);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"SUCCESSFUL TRANSFER\", status ? /*#__PURE__*/_jsxDEV(GoogleLogin, {\n      clientId: process.env.REACT_APP_GOOGLE_ID,\n      buttonText: \"Log out\",\n      onSuccess: onSuccess,\n      onFailure: onFailure,\n      cookiePolicy: 'single_host_origin'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Options, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Options, \"JX83Yt91lmbdp8qRj06BNJZeUo4=\");\n\n_c = Options;\nexport default Options;\n\nvar _c;\n\n$RefreshReg$(_c, \"Options\");","map":{"version":3,"sources":["/home/ec2-user/environment/react-starter-code/src/Options.js"],"names":["React","useState","useRef","useEffect","GoogleLogin","Options","status","setStatus","onSuccess","res","onFailure","console","log","process","env","REACT_APP_GOOGLE_ID"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,MAA1B,EAAkCC,SAAlC,QAAmD,OAAnD;AACA,SAASC,WAAT,QAA4B,oBAA5B;;;AAGA,SAASC,OAAT,GAAmB;AAAA;;AAEjB,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBN,QAAQ,CAAC,IAAD,CAApC,CAFiB,CAIjB;;AACA,QAAMO,SAAS,GAAIC,GAAD,IAAS;AACzBF,IAAAA,SAAS,CAAC,CAACD,MAAF,CAAT;AACD,GAFD,CALiB,CASjB;;;AACA,QAAMI,SAAS,GAAID,GAAD,IAAS;AACzBE,IAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmCH,GAAnC;AACD,GAFD;;AAIA,sBACE;AAAA,sCAEKH,MAAM,gBACP,QAAC,WAAD;AACE,MAAA,QAAQ,EAAEO,OAAO,CAACC,GAAR,CAAYC,mBADxB;AAEE,MAAA,UAAU,EAAC,SAFb;AAGE,MAAA,SAAS,EAAEP,SAHb;AAIE,MAAA,SAAS,EAAEE,SAJb;AAKE,MAAA,YAAY,EAAE;AALhB;AAAA;AAAA;AAAA;AAAA,YADO,gBAQL,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YAVN;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAcD;;GA5BQL,O;;KAAAA,O;AA8BT,eAAeA,OAAf","sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport { GoogleLogin } from 'react-google-login';\n\n\nfunction Options() {\n    \n  const [status, setStatus] = useState(true);\n  \n  // If the user logs in, the below code executes\n  const onSuccess = (res) => {\n    setStatus(!status);\n  };\n  \n  // If the user fails to login, the below code executes\n  const onFailure = (res) => {\n    console.log('[Login Failed] res:', res);\n  };\n  \n  return (\n    <div>\n        SUCCESSFUL TRANSFER\n        {status ? (\n        <GoogleLogin\n          clientId={process.env.REACT_APP_GOOGLE_ID}\n          buttonText=\"Log out\"\n          onSuccess={onSuccess}\n          onFailure={onFailure}\n          cookiePolicy={'single_host_origin'}\n        />\n      ) : <Options />}\n    </div>\n  );\n}\n\nexport default Options;"]},"metadata":{},"sourceType":"module"}