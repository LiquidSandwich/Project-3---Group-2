{"ast":null,"code":"var _jsxFileName = \"/home/ec2-user/environment/react-starter-code/src/Login.js\",\n    _s = $RefreshSig$();\n\nimport './Login.css';\nimport React, { useState, useRef, useEffect } from 'react';\nimport { GoogleLogin } from 'react-google-login';\nimport Options from './Options';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst dotenv = require('dotenv');\n\ndotenv.config();\nconst clientID = process.env.REACT_APP_GOOGLE_ID;\n\nfunction Login() {\n  _s();\n\n  const [status, setStatus] = useState(false);\n\n  const onSuccess = res => {\n    console.log('[Login Success] currentUser:', res.profileObj);\n    const data = res.profileObj;\n    console.log('Name of user:', data['name']);\n    console.log('Image of user:', data['imageUrl']);\n    setStatus(!status);\n  };\n\n  const onFailure = res => {\n    console.log('[Login Failed] res:', res);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: status ? /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"nogginy\", /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"trivia and chat with friends\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(GoogleLogin, {\n        clientId: process.env.REACT_APP_GOOGLE_ID,\n        buttonText: \"Log in with Google\",\n        onSuccess: onSuccess,\n        onFailure: onFailure,\n        cookiePolicy: 'single_host_origin'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this) : null\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Login, \"2WbRiTAV0HpyuJgyVzzDJBs2628=\");\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/home/ec2-user/environment/react-starter-code/src/Login.js"],"names":["React","useState","useRef","useEffect","GoogleLogin","Options","dotenv","require","config","clientID","process","env","REACT_APP_GOOGLE_ID","Login","status","setStatus","onSuccess","res","console","log","profileObj","data","onFailure"],"mappings":";;;AAAA,OAAO,aAAP;AACA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,MAA1B,EAAkCC,SAAlC,QAAmD,OAAnD;AACA,SAASC,WAAT,QAA4B,oBAA5B;AACA,OAAOC,OAAP,MAAoB,WAApB;;;AAEA,MAAMC,MAAM,GAAGC,OAAO,CAAC,QAAD,CAAtB;;AACAD,MAAM,CAACE,MAAP;AAEA,MAAMC,QAAQ,GAAGC,OAAO,CAACC,GAAR,CAAYC,mBAA7B;;AAEA,SAASC,KAAT,GAAiB;AAAA;;AACf,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBd,QAAQ,CAAC,KAAD,CAApC;;AAEA,QAAMe,SAAS,GAAIC,GAAD,IAAS;AACzBC,IAAAA,OAAO,CAACC,GAAR,CAAY,8BAAZ,EAA4CF,GAAG,CAACG,UAAhD;AACA,UAAMC,IAAI,GAAGJ,GAAG,CAACG,UAAjB;AACAF,IAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BE,IAAI,CAAC,MAAD,CAAjC;AACAH,IAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BE,IAAI,CAAC,UAAD,CAAlC;AACAN,IAAAA,SAAS,CAAC,CAACD,MAAF,CAAT;AAED,GAPD;;AASA,QAAMQ,SAAS,GAAIL,GAAD,IAAS;AACzBC,IAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmCF,GAAnC;AACD,GAFD;;AAIA,sBACE;AAAA,cACCH,MAAM,gBACL;AAAA,yCAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAKE,QAAC,WAAD;AACE,QAAA,QAAQ,EAAEJ,OAAO,CAACC,GAAR,CAAYC,mBADxB;AAEE,QAAA,UAAU,EAAC,oBAFb;AAGE,QAAA,SAAS,EAAEI,SAHb;AAIE,QAAA,SAAS,EAAEM,SAJb;AAKE,QAAA,YAAY,EAAE;AALhB;AAAA;AAAA;AAAA;AAAA,cALF;AAAA;AAAA;AAAA;AAAA;AAAA,YADK,GAcD;AAfN;AAAA;AAAA;AAAA;AAAA,UADF;AAmBD;;GAnCQT,K;;KAAAA,K;AAqCT,eAAeA,KAAf","sourcesContent":["import './Login.css';\nimport React, { useState, useRef, useEffect } from 'react';\nimport { GoogleLogin } from 'react-google-login';\nimport Options from './Options';\n\nconst dotenv = require('dotenv');\ndotenv.config();\n\nconst clientID = process.env.REACT_APP_GOOGLE_ID;\n\nfunction Login() {\n  const [status, setStatus] = useState(false);\n  \n  const onSuccess = (res) => {\n    console.log('[Login Success] currentUser:', res.profileObj);\n    const data = res.profileObj;\n    console.log('Name of user:', data['name']);\n    console.log('Image of user:', data['imageUrl']);\n    setStatus(!status);\n    \n  };\n  \n  const onFailure = (res) => {\n    console.log('[Login Failed] res:', res);\n  };\n  \n  return (\n    <div>\n    {status ? (\n      <h1>\n        nogginy\n        <h2>\n          trivia and chat with friends\n        </h2>\n        <GoogleLogin\n          clientId={process.env.REACT_APP_GOOGLE_ID}\n          buttonText=\"Log in with Google\"\n          onSuccess={onSuccess}\n          onFailure={onFailure}\n          cookiePolicy={'single_host_origin'}\n        />\n      </h1>\n      ) : null}\n    </div>\n  );\n}\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}