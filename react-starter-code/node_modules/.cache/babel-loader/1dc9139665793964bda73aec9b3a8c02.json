{"ast":null,"code":"var _jsxFileName = \"/home/ec2-user/environment/react-starter-code/src/Options.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef, useEffect } from 'react';\nimport { GoogleLogin } from 'react-google-login';\nimport Login from './Login'; // These two lines load environmental variables from .env\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst dotenv = require('dotenv');\n\ndotenv.config(); // Fills clientID variable with API ID key\n\nconst clientID = process.env.REACT_APP_GOOGLE_ID;\n\nfunction Options() {\n  _s();\n\n  const [status, setStatus] = useState(true); // If the user logs in, the below code executes\n\n  const onSuccess = res => {\n    setStatus(!status);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"SUCCESSFUL TRANSFER\", status ? /*#__PURE__*/_jsxDEV(GoogleLogin, {\n      clientId: process.env.REACT_APP_GOOGLE_ID,\n      buttonText: \"Log out\",\n      onSuccess: onSuccess\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Options, \"JX83Yt91lmbdp8qRj06BNJZeUo4=\");\n\n_c = Options;\nexport default Options;\n\nvar _c;\n\n$RefreshReg$(_c, \"Options\");","map":{"version":3,"sources":["/home/ec2-user/environment/react-starter-code/src/Options.js"],"names":["React","useState","useRef","useEffect","GoogleLogin","Login","dotenv","require","config","clientID","process","env","REACT_APP_GOOGLE_ID","Options","status","setStatus","onSuccess","res"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,MAA1B,EAAkCC,SAAlC,QAAmD,OAAnD;AACA,SAASC,WAAT,QAA4B,oBAA5B;AACA,OAAOC,KAAP,MAAkB,SAAlB,C,CAEA;;;;AACA,MAAMC,MAAM,GAAGC,OAAO,CAAC,QAAD,CAAtB;;AACAD,MAAM,CAACE,MAAP,G,CAEA;;AACA,MAAMC,QAAQ,GAAGC,OAAO,CAACC,GAAR,CAAYC,mBAA7B;;AAEA,SAASC,OAAT,GAAmB;AAAA;;AAEjB,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBd,QAAQ,CAAC,IAAD,CAApC,CAFiB,CAIjB;;AACA,QAAMe,SAAS,GAAIC,GAAD,IAAS;AACzBF,IAAAA,SAAS,CAAC,CAACD,MAAF,CAAT;AACD,GAFD;;AAIA,sBACE;AAAA,sCAEKA,MAAM,gBACP,QAAC,WAAD;AACE,MAAA,QAAQ,EAAEJ,OAAO,CAACC,GAAR,CAAYC,mBADxB;AAEE,MAAA,UAAU,EAAC,SAFb;AAGE,MAAA,SAAS,EAAEI;AAHb;AAAA;AAAA;AAAA;AAAA,YADO,gBAML,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA,YARN;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAYD;;GArBQH,O;;KAAAA,O;AAuBT,eAAeA,OAAf","sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport { GoogleLogin } from 'react-google-login';\nimport Login from './Login';\n\n// These two lines load environmental variables from .env\nconst dotenv = require('dotenv');\ndotenv.config();\n\n// Fills clientID variable with API ID key\nconst clientID = process.env.REACT_APP_GOOGLE_ID;\n\nfunction Options() {\n    \n  const [status, setStatus] = useState(true);\n  \n  // If the user logs in, the below code executes\n  const onSuccess = (res) => {\n    setStatus(!status);\n  };\n  \n  return (\n    <div>\n        SUCCESSFUL TRANSFER\n        {status ? (\n        <GoogleLogin\n          clientId={process.env.REACT_APP_GOOGLE_ID}\n          buttonText=\"Log out\"\n          onSuccess={onSuccess}\n        />\n      ) : <Login />}\n    </div>\n  );\n}\n\nexport default Options;"]},"metadata":{},"sourceType":"module"}