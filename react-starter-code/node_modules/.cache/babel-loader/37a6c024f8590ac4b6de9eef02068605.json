{"ast":null,"code":"var _jsxFileName = \"/home/ec2-user/environment/react-starter-code/src/App.js\";\nimport './App.css';\nimport React from 'react';\nimport { GoogleLogin } from 'react-google-login';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst dotenv = require('dotenv');\n\ndotenv.config();\nconst clientID = process.env.REACT_APP_GOOGLE_ID;\n\nfunction App() {\n  const handleLogin = async googleData => {\n    const res = await fetch(\"/api/v1/auth/google\", {\n      method: \"POST\",\n      body: JSON.stringify({\n        token: googleData.tokenId\n      }),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    const data = await res.json();\n    console.log(data); // store returned user somehow\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"nogginy\", /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"trivia and chat with friends\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(GoogleLogin, {\n        clientId: process.env.REACT_APP_GOOGLE_ID,\n        buttonText: \"Log in with Google\",\n        onSuccess: handleLogin,\n        onFailure: handleLogin,\n        cookiePolicy: 'single_host_origin'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n}\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/ec2-user/environment/react-starter-code/src/App.js"],"names":["React","GoogleLogin","dotenv","require","config","clientID","process","env","REACT_APP_GOOGLE_ID","App","handleLogin","googleData","res","fetch","method","body","JSON","stringify","token","tokenId","headers","data","json","console","log"],"mappings":";AAAA,OAAO,WAAP;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,oBAA5B;;;AAGA,MAAMC,MAAM,GAAGC,OAAO,CAAC,QAAD,CAAtB;;AACAD,MAAM,CAACE,MAAP;AAEA,MAAMC,QAAQ,GAAGC,OAAO,CAACC,GAAR,CAAYC,mBAA7B;;AAEA,SAASC,GAAT,GAAe;AAEb,QAAMC,WAAW,GAAG,MAAMC,UAAN,IAAoB;AACxC,UAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,qBAAD,EAAwB;AAC3CC,MAAAA,MAAM,EAAE,MADmC;AAE3CC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACrBC,QAAAA,KAAK,EAAEP,UAAU,CAACQ;AADG,OAAf,CAFqC;AAK7CC,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT;AALoC,KAAxB,CAAvB;AASA,UAAMC,IAAI,GAAG,MAAMT,GAAG,CAACU,IAAJ,EAAnB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ,EAXwC,CAYxC;AACC,GAbD;;AAeA,sBACE;AAAA,2BACE;AAAA,yCAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAKE,QAAC,WAAD;AACE,QAAA,QAAQ,EAAEf,OAAO,CAACC,GAAR,CAAYC,mBADxB;AAEE,QAAA,UAAU,EAAC,oBAFb;AAGE,QAAA,SAAS,EAAEE,WAHb;AAIE,QAAA,SAAS,EAAEA,WAJb;AAKE,QAAA,YAAY,EAAE;AALhB;AAAA;AAAA;AAAA;AAAA,cALF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAiBD;;KAlCQD,G;AAoCT,eAAeA,GAAf","sourcesContent":["import './App.css';\nimport React from 'react';\nimport { GoogleLogin } from 'react-google-login';\n\n\nconst dotenv = require('dotenv');\ndotenv.config();\n\nconst clientID = process.env.REACT_APP_GOOGLE_ID;\n\nfunction App() {\n  \n  const handleLogin = async googleData => {\n  const res = await fetch(\"/api/v1/auth/google\", {\n      method: \"POST\",\n      body: JSON.stringify({\n      token: googleData.tokenId\n    }),\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  })\n  const data = await res.json()\n  console.log(data);\n  // store returned user somehow\n  }\n  \n  return (\n    <div>\n      <h1>\n        nogginy\n        <h2>\n          trivia and chat with friends\n        </h2>\n        <GoogleLogin\n          clientId={process.env.REACT_APP_GOOGLE_ID}\n          buttonText=\"Log in with Google\"\n          onSuccess={handleLogin}\n          onFailure={handleLogin}\n          cookiePolicy={'single_host_origin'}\n        />\n      </h1>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}